"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseController = void 0;
const Http_1 = require("./Http");
class BaseController extends Http_1.Http {
    constructor() {
        super();
        this.name = "";
    }
    error(error, response) {
        response.setHeader("Cache-Control", "no-cache");
        return response.status(this.HTTP_ERROR).send(error.stack);
    }
    send(response, text) {
        response.setHeader("Cache-Control", "no-cache");
        return response.status(this.HTTP_OK).send(text);
    }
    sendJsonCustomCode(response, text, code) {
        response.setHeader("Cache-Control", "no-cache");
        return response
            .type("application/json")
            .status(code)
            .send(typeof text === "string" ? text : JSON.stringify(text));
    }
    sendJson(response, text) {
        response.setHeader("Cache-Control", "no-cache");
        return response
            .type("application/json")
            .status(this.HTTP_OK)
            .send(typeof text === "string" ? text : JSON.stringify(text));
    }
    sendErrorJson(response, text) {
        response.setHeader("Cache-Control", "no-cache");
        return response
            .type("application/json")
            .status(this.HTTP_ERROR)
            .send(typeof text === "object" ? text : JSON.stringify({ errorMsg: text }));
    }
}
exports.BaseController = BaseController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFzZUNvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29yZS9odHRwL0Jhc2VDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlDQUE0QjtBQUU1QixNQUFhLGNBQWUsU0FBUSxXQUFJO0lBR3BDO1FBQ0ksS0FBSyxFQUFFLENBQUM7UUFITCxTQUFJLEdBQUcsRUFBRSxDQUFDO0lBSWpCLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBWSxFQUFFLFFBQWtCO1FBQ3pDLFFBQVEsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRU0sSUFBSSxDQUFDLFFBQWtCLEVBQUUsSUFBWTtRQUN4QyxRQUFRLENBQUMsU0FBUyxDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNoRCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRU0sa0JBQWtCLENBQUMsUUFBa0IsRUFBRSxJQUFTLEVBQUUsSUFBWTtRQUNqRSxRQUFRLENBQUMsU0FBUyxDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNoRCxPQUFPLFFBQVE7YUFDVixJQUFJLENBQUMsa0JBQWtCLENBQUM7YUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQzthQUNaLElBQUksQ0FBQyxPQUFPLElBQUksS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFTSxRQUFRLENBQUMsUUFBa0IsRUFBRSxJQUFTO1FBQ3pDLFFBQVEsQ0FBQyxTQUFTLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ2hELE9BQU8sUUFBUTthQUNWLElBQUksQ0FBQyxrQkFBa0IsQ0FBQzthQUN4QixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQzthQUNwQixJQUFJLENBQUMsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRU0sYUFBYSxDQUFDLFFBQWtCLEVBQUUsSUFBUztRQUM5QyxRQUFRLENBQUMsU0FBUyxDQUFDLGVBQWUsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNoRCxPQUFPLFFBQVE7YUFDVixJQUFJLENBQUMsa0JBQWtCLENBQUM7YUFDeEIsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7YUFDdkIsSUFBSSxDQUFDLE9BQU8sSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsQ0FBQztJQUNsRixDQUFDO0NBQ0o7QUF4Q0Qsd0NBd0NDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIdHRwfSBmcm9tIFwiLi9IdHRwXCI7XG5pbXBvcnQge1Jlc3BvbnNlfSBmcm9tIFwiZXhwcmVzc1wiO1xuZXhwb3J0IGNsYXNzIEJhc2VDb250cm9sbGVyIGV4dGVuZHMgSHR0cCB7XG4gICAgcHVibGljIG5hbWUgPSBcIlwiO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgcHVibGljIGVycm9yKGVycm9yOiBFcnJvciwgcmVzcG9uc2U6IFJlc3BvbnNlKSB7XG4gICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcihcIkNhY2hlLUNvbnRyb2xcIiwgXCJuby1jYWNoZVwiKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyh0aGlzLkhUVFBfRVJST1IpLnNlbmQoZXJyb3Iuc3RhY2spO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZW5kKHJlc3BvbnNlOiBSZXNwb25zZSwgdGV4dDogc3RyaW5nKSB7XG4gICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcihcIkNhY2hlLUNvbnRyb2xcIiwgXCJuby1jYWNoZVwiKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyh0aGlzLkhUVFBfT0spLnNlbmQodGV4dCk7XG4gICAgfVxuXG4gICAgcHVibGljIHNlbmRKc29uQ3VzdG9tQ29kZShyZXNwb25zZTogUmVzcG9uc2UsIHRleHQ6IGFueSwgY29kZTogbnVtYmVyKSB7XG4gICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcihcIkNhY2hlLUNvbnRyb2xcIiwgXCJuby1jYWNoZVwiKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlXG4gICAgICAgICAgICAudHlwZShcImFwcGxpY2F0aW9uL2pzb25cIilcbiAgICAgICAgICAgIC5zdGF0dXMoY29kZSlcbiAgICAgICAgICAgIC5zZW5kKHR5cGVvZiB0ZXh0ID09PSBcInN0cmluZ1wiID8gdGV4dCA6IEpTT04uc3RyaW5naWZ5KHRleHQpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2VuZEpzb24ocmVzcG9uc2U6IFJlc3BvbnNlLCB0ZXh0OiBhbnkpIHtcbiAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKFwiQ2FjaGUtQ29udHJvbFwiLCBcIm5vLWNhY2hlXCIpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2VcbiAgICAgICAgICAgIC50eXBlKFwiYXBwbGljYXRpb24vanNvblwiKVxuICAgICAgICAgICAgLnN0YXR1cyh0aGlzLkhUVFBfT0spXG4gICAgICAgICAgICAuc2VuZCh0eXBlb2YgdGV4dCA9PT0gXCJzdHJpbmdcIiA/IHRleHQgOiBKU09OLnN0cmluZ2lmeSh0ZXh0KSk7XG4gICAgfVxuXG4gICAgcHVibGljIHNlbmRFcnJvckpzb24ocmVzcG9uc2U6IFJlc3BvbnNlLCB0ZXh0OiBhbnkpIHtcbiAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKFwiQ2FjaGUtQ29udHJvbFwiLCBcIm5vLWNhY2hlXCIpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2VcbiAgICAgICAgICAgIC50eXBlKFwiYXBwbGljYXRpb24vanNvblwiKVxuICAgICAgICAgICAgLnN0YXR1cyh0aGlzLkhUVFBfRVJST1IpXG4gICAgICAgICAgICAuc2VuZCh0eXBlb2YgdGV4dCA9PT0gXCJvYmplY3RcIiA/IHRleHQgOiBKU09OLnN0cmluZ2lmeSh7ZXJyb3JNc2c6IHRleHR9KSk7XG4gICAgfVxufVxuIl19